name: Commit Keyword Discord Notification

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'   # 필요 없으면 지워도 됨
  pull_request:
    branches:
      - main
      - develop
      - 'feature/**'

jobs:
  notify-on-keyword:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # 커밋 범위 스캔 위해 전체 히스토리

      - name: Fetch base branch (for PR)
        if: ${{ github.event_name == 'pull_request' }}
        run: git fetch origin ${{ github.base_ref }}:${{ github.base_ref }}

      - name: Scan commit messages for keyword
        id: scan
        env:
          KEYWORD: "[API 변경]"   # ← 원하는 키워드로 바꿔도 됨
        run: |
          # 비교 범위 결정
          if [ "${{ github.event_name }}" = "push" ]; then
            BASE="${{ github.event.before }}"
            HEAD="${{ github.sha }}"
            if [ "$BASE" = "0000000000000000000000000000000000000000" ] || [ -z "$BASE" ]; then
              RANGE="$HEAD~50..$HEAD"     # 새 브랜치 첫 push 방어
            else
              RANGE="$BASE..$HEAD"
            fi
            LOG=$(git log --pretty=format:'%h %s' "$RANGE")
          else
            # PR: base..HEAD 범위의 커밋들
            LOG=$(git log --pretty=format:'%h %s' ${{ github.base_ref }}..HEAD)
          fi

          echo "=== Scan range commits ==="
          echo "$LOG"

          # 대소문자 구분 없이 키워드 매칭
          MATCHED=$(echo "$LOG" | grep -i -F "$KEYWORD" || true)

          if [ -n "$MATCHED" ]; then
            echo "found=true" >> $GITHUB_OUTPUT
            echo "$MATCHED" | head -c 1800 > matched.txt
          else
            echo "found=false" >> $GITHUB_OUTPUT
          fi

          # PR/Push 공통으로 표시용 정보 준비
          if [ "${{ github.event_name }}" = "push" ]; then
            echo "title=Commit keyword detected (Push)" >> $GITHUB_OUTPUT
            echo "author=${{ github.actor }}" >> $GITHUB_OUTPUT
            echo "branch=${{ github.ref_name }}" >> $GITHUB_OUTPUT
            echo "url=${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}" >> $GITHUB_OUTPUT
          else
            echo "title=Commit keyword detected (Pull Request)" >> $GITHUB_OUTPUT
            echo "author=${{ github.event.pull_request.user.login }}" >> $GITHUB_OUTPUT
            echo "branch=${{ github.event.pull_request.head.ref }}" >> $GITHUB_OUTPUT
            echo "url=${{ github.event.pull_request.html_url }}" >> $GITHUB_OUTPUT
          fi

      - name: Post to Discord
        if: steps.scan.outputs.found == 'true'
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          REPO="${{ github.repository }}"
          TITLE="${{ steps.scan.outputs.title }}"
          AUTHOR="${{ steps.scan.outputs.author }}"
          BRANCH="${{ steps.scan.outputs.branch }}"
          URL="${{ steps.scan.outputs.url }}"
          BODY="$(cat matched.txt)"

          # 임베드 색상 (푸시=초록, PR=노랑)
          if [ "${{ github.event_name }}" = "push" ]; then COLOR=3066993; else COLOR=15844367; fi

          jq -n --arg title "$TITLE" \
                --arg repo "$REPO" \
                --arg author "$AUTHOR" \
                --arg branch "$BRANCH" \
                --arg url "$URL" \
                --arg body "$BODY" \
                --arg color "$COLOR" '
          {
            "embeds": [{
              "title": $title,
              "description": "커밋 메시지에서 키워드가 감지되었습니다.",
              "color": ($color|tonumber),
              "fields": [
                {"name":"📁 Repository","value":$repo,"inline":true},
                {"name":"🌿 Branch","value":("`"+$branch+"`"),"inline":true},
                {"name":"👤 Author","value":$author,"inline":true},
                {"name":"🔗 Link","value":$url,"inline":false},
                {"name":"📝 Matched Commits","value":("```\\n"+$body+"\\n```"),"inline":false}
              ],
              "timestamp": (now|tojson)
            }]
          }' > payload.json

          curl -H "Content-Type: application/json" -d @payload.json "$DISCORD_WEBHOOK_URL"

      - name: Summary
        if: steps.scan.outputs.found == 'true'
        run: |
          echo "## ✅ Commit keyword detected" >> $GITHUB_STEP_SUMMARY
          echo "- **Repository**: ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ steps.scan.outputs.branch }}" >> $GITHUB_STEP_SUMMARY
          echo "- **URL**: ${{ steps.scan.outputs.url }}" >> $GITHUB_STEP_SUMMARY
